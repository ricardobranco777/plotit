#!/usr/bin/python3
"""
PlotIt
"""

import argparse
import os
import sys
from concurrent.futures import ProcessPoolExecutor
from datetime import datetime

from pandas import read_csv
from matplotlib import pyplot

USAGE = "%s [-d|--delimiter DELIMITER] [-k|--kind line|bar|area] FILES..." % sys.argv[0]
args = None


def unix2datetime(timestamp):
    """
    Convert Unix timestamp to datetime object
    """
    return datetime.fromtimestamp(int(timestamp))


def plot_file(filename):
    """
    Plot a CSV file using a space as delimiter with the format:
    NAME TIMESTAMP FLOAT_VALUE
    """
    # TODO: Catch exceptions on invalid files
    series = read_csv(
        filename,
        delimiter=args.delimiter,
        header=None,
        index_col=1,
        parse_dates=True,
        date_parser=unix2datetime)
    series.plot(title=os.path.basename(filename), kind=args.kind)
    pyplot.savefig(filename + ".png")


def parse_args():
    """
    Parse options and arguments
    """
    parser = argparse.ArgumentParser(usage=USAGE, add_help=False)
    parser.add_argument(
        '-d', '--delimiter', default=' ')
    parser.add_argument(
        '-k', '--kind', default='line', choices=['line', 'bar', 'area'])
    parser.add_argument('files', nargs='+')
    return parser.parse_args()


def main():
    """
    Main function
    """
    global args  # pylint: disable=global-statement
    args = parse_args()
    with ProcessPoolExecutor() as executor:
        executor.map(plot_file, args.files)


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        sys.exit(1)
